// nbayes | Jannis R | v2.0.0

!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var i;i="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,i.nbayes=t()}}(function(){return function t(i,s,e){function n(o,a){if(!s[o]){if(!i[o]){var u="function"==typeof require&&require;if(!a&&u)return u(o,!0);if(r)return r(o,!0);var f=Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var c=s[o]={exports:{}};i[o][0].call(c.exports,function(t){var s=i[o][1][t];return n(s?s:t)},c,c.exports,t,i,s,e)}return s[o].exports}for(var r="function"==typeof require&&require,o=0;e.length>o;o++)n(e[o]);return n}({1:[function(t,i){{var s={init:function(){return this._w={},this.size=0,this},add:function(t){return this._w[t]||(this._w[t]=!0,this.size++),this},has:function(t){return!!this._w[t]},addBagOfWords:function(t){var i;for(i in t._i)this.add(i);return this}},e={init:function(){return this._i={},this.total=0,this},increase:function(t,i){return this._i[t]?this._i[t]+=i:this._i[t]=i,this.total+=i,this},get:function(t){return this._i[t]||0},addBagOfWords:function(t){var i;for(i in t._i)this.increase(i,t._i[i]);return this},addWords:function(t){var i,s;for(i=0,s=t.length;s>i;i++)this.increase(t[i],1);return this}};i.exports={init:function(){return this.classes={},this.documents=0,this.vocabulary=Object.create(s).init(),this},learn:function(t,i){var s=this._bagOfWords(i);return this.classes[t]?(this.classes[t].words.addBagOfWords(s),this.classes[t].documents++):this.classes[t]={words:s,documents:1},this.documents++,this.vocabulary.addBagOfWords(s),this},probabilities:function(t){var i,s=this._bagOfWords(t),e={};for(i in this.classes)e[i]=this._pD(i,s);return e},classify:function(t){var i,s,e=this._bagOfWords(t),n=-(1/0),r=null;for(i in this.classes)s=this._pD(i,e),s>n&&(n=s,r=i);return r},_pD:function(t,i){var s,e,n=this.classes[t].documents/this.documents;for(s in i._i)e=(this.classes[t].words.get(s)+1)/(this.classes[t].words.total+this.vocabulary.size),n*=Math.pow(e,i._i[s]);return n},_bagOfWords:function(t){var i=Object.create(e).init();return i.addWords(t.replace(/[^\w\s]/g," ").split(/\s+/))}}}},{}]},{},[1])(1)});